plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'com.beanbeanjuice'
version = '0.1.1'

repositories {
    mavenCentral()

    maven {
        name = "sonatype"
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        name = "jitpack"
        url = uri('https://jitpack.io')
    }

    maven {
        name = "papermc-repo"
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }
}

dependencies {
    // Velocity
    compileOnly("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.3.0-SNAPSHOT")

    // Bungee
    compileOnly("net.md-5:bungeecord-api:1.20-R0.1-SNAPSHOT")
    implementation("net.kyori:adventure-api:4.16.0")  // Convert Velocity -> Bungee
    implementation("net.kyori:adventure-text-minimessage:4.16.0")  // Convert Velocity -> Bungee
    implementation("net.kyori:adventure-text-serializer-plain:4.16.0")  // Convert Velocity -> Bungee
    implementation("net.kyori:adventure-text-serializer-legacy:4.16.0")  // Convert Velocity -> Bungee
    implementation("net.kyori:adventure-text-serializer-gson:4.16.0")  // Convert Velocity -> Bungee
    implementation("net.kyori:adventure-text-serializer-bungeecord:4.3.2")  // Convert Velocity -> Bungee

    // Discord Support
    implementation("net.dv8tion:JDA:5.0.0-beta.20") {
        exclude module: 'opus-java'
    }

    // PremiumVanish/SuperVanish Support
    compileOnly("com.github.LeonMangler:PremiumVanishAPI:2.9.0-4")

    // Better YAML Support
    implementation("dev.dejvokep:boosted-yaml:1.3.1")

    // bStats
    implementation("org.bstats:bstats-velocity:3.0.2")
    implementation("org.bstats:bstats-bungeecord:3.0.2")

    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.30")
    annotationProcessor("org.projectlombok:lombok:1.18.30")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    expand props
    filteringCharset 'UTF-8'
    filesMatching('bungee.yml') {
        expand props
    }
    filesMatching('velocity-plugin.json') {
        expand props
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    minimize()
    relocate("org.bstats", "com.beanbeanjuice.simpleproxychat.libs.org.bstats")
    archiveBaseName.set(rootProject.name)
    archiveClassifier.set('')
    archiveVersion.set('')
}

assemble.dependsOn shadowJar
